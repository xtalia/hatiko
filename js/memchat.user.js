// ==UserScript==
// @name         –ú–µ–º–Ω—ã–π —á–∞—Ç —Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º –∏ Trade-In
// @namespace    http://tampermonkey.net/
// @version      2.1.1
// @description  –ù–∞–±–æ—Ä —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω, —Ä–∞–±–æ—Ç—ã —Å Hatiko, –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º –∏ Trade-In
// @match        https://online.moysklad.ru/*
// @match        https://*.bitrix24.ru/*
// @grant        GM_xmlhttpRequest
// @grant        GM_registerMenuCommand
// ==/UserScript==

'use strict';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const superserver = 'memchat.tw1.ru:5000'; // –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
const baseUrls = [ // –ë–∞–∑–æ–≤—ã–µ URL –¥–ª—è Hatiko
    "https://hatiko.ru",
    "https://voronezh.hatiko.ru",
    "https://lipetsk.hatiko.ru",
    "https://balakovo.hatiko.ru"
];

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
const UPDATE_INTERVAL = 12 * 60 * 60 * 1000; // 12 —á–∞—Å–æ–≤
let rateConfigurations = {};
const jsonUrl = "https://raw.githubusercontent.com/xtalia/hatiko/refs/heads/main/js/calculatorRates.json";

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏
let isDragging = false;
let offset = { x: 0, y: 0 };

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–æ–π —Ç–µ–∫—Å—Ç–∞
let enabled = false;  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–∫—Ä–∏–ø—Ç –æ—Ç–∫–ª—é—á–µ–Ω
let commandId;

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É
function fetchServerData(url, onSuccess, onError) {
    GM_xmlhttpRequest({
        method: 'GET',
        url: url,
        onload: function(response) {
            if (response.status === 200) {
                onSuccess(response);
            } else {
                onError(`–û—à–∏–±–∫–∞: ${response.statusText}`);
            }
        },
        onerror: function(error) {
            onError(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: ${error}`);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö —Å–∫—Ä—ã—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞
function showAllTabContents() {
    const hiddenElements = document.querySelectorAll('.tab-content .hidden');
    hiddenElements.forEach(element => {
        element.classList.remove('hidden');
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–∫–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω
function createPriceCheckWindow() {
    if (!window.priceCheckContainer) {
        const container = document.createElement('div');
        container.setAttribute('id', 'priceCheckContainer');
        container.style.cssText = `
            position: fixed;
            top: 10px;
            right: 10px;
            width: 360px;
            background: #fff;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 10px;
            display: none;
            z-index: 9999;
            box-sizing: border-box;
        `;

        // –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–∫–Ω–∞
        container.innerHTML = `
            <div id="priceCheckHeader" style="font-size: 18px; font-weight: bold; margin-bottom: 10px; user-select: none; cursor: move;">
                –ú–µ–º–Ω—ã–π —á–∞—Ç
                <span id="priceCheckCloseButton" style="position: absolute; top: 10px; right: 10px; cursor: pointer;">&#10006;</span>
            </div>
            <div style="margin-bottom: 10px;">
                <input type="text" id="priceCheckInput" placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å..." style="width: 100%; padding: 5px; border-radius: 5px; border: 1px solid #ccc; box-sizing: border-box;">
            </div>
            <div style="margin-bottom: 10px;">
                <textarea id="priceCheckResult" style="width: 100%; height: 120px; resize: none; border-radius: 5px; border: 1px solid #ccc; padding: 5px; box-sizing: border-box;" readonly></textarea>
            </div>
            <div id="priceCheckControls" style="display: flex; flex-wrap: wrap; gap: 5px; margin-bottom: 10px;">
                <button id="priceCheckButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">ü§ñ</button>
                <button id="hatikoButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">üê∂</button>
                <button id="copyButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">üìã</button>
                <button id="whoWorksTodayButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">üë®‚Äçüíº –°–µ–≥–æ–¥–Ω—è</button>
                <button id="whoWorksTomorrowButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">üë®‚Äçüíº –ó–∞–≤—Ç—Ä–∞</button>
                <button id="calculatorButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</button>
                <button id="tradeInButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">üì± Trade-In</button>
                <button id="showAllTabsButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">üìÇ –†–∞—Å–∫—Ä—ã—Ç—å –≤—Å–µ</button>
                <button id="toggleClearTextAndTimeoutButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">üßπ –û—á–∏—Å—Ç–∫–∞ –∏ –∑–∞–¥–µ—Ä–∂–∫–∞</button>
            </div>

            <!-- –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä -->
            <div id="calculator" style="display: none; margin-top: 10px;">
                <div style="margin-bottom: 10px;">
                    <input type="number" id="calculatorCashInput" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" style="width: 100%; padding: 5px; border-radius: 5px; border: 1px solid #ccc; box-sizing: border-box;">
                </div>
                <div style="margin-bottom: 10px;">
                    <select id="calculatorModeSelect" style="width: 100%; padding: 5px; border-radius: 5px; border: 1px solid #ccc; box-sizing: border-box;">
                        <option value="all">–î–ª—è –≤—Å–µ—Ö</option>
                        <option value="balakovo">–î–ª—è –ë–∞–ª–∞–∫–æ–≤–æ</option>
                        <option value="prepay">–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 5%</option>
                    </select>
                </div>
                <div style="display: flex; gap: 5px; margin-bottom: 10px;">
                    <button id="calculatorCalculateButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">–ü–æ—Å—á–∏—Ç–∞—Ç—å</button>
                    <button id="calculatorReverseButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #f44336; color: white; cursor: pointer;">–†–µ–≤–µ—Ä—Å</button>
                </div>
                <div style="margin-bottom: 10px;">
                    <textarea id="calculatorResultField" style="width: 100%; height: 80px; resize: none; border-radius: 5px; border: 1px solid #ccc; padding: 5px; box-sizing: border-box;" readonly></textarea>
                </div>
                <div style="margin-bottom: 10px;">
                    <input type="number" id="calculatorDiscountInput" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–∫–∏–¥–∫–∏" style="width: 100%; padding: 5px; border-radius: 5px; border: 1px solid #ccc; box-sizing: border-box;">
                </div>
                <button id="calculatorApplyDiscountButton" style="width: 100%; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å–∫–∏–¥–∫—É</button>
            </div>

            <!-- –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä Trade-In -->
            <div id="tradeInCalculator" style="display: none; margin-top: 10px;">
                <div style="margin-bottom: 10px;">
                    <select id="tradeInModelSelect" style="width: 100%; padding: 5px; border-radius: 5px; border: 1px solid #ccc; box-sizing: border-box;"></select>
                </div>
                <div style="margin-bottom: 10px;">
                    <select id="tradeInMemorySelect" style="width: 100%; padding: 5px; border-radius: 5px; border: 1px solid #ccc; box-sizing: border-box;"></select>
                </div>
                <div style="margin-bottom: 10px;">
                    <select id="tradeInBatterySelect" style="width: 100%; padding: 5px; border-radius: 5px; border: 1px solid #ccc; box-sizing: border-box;">
                        <option value="90">90%+</option>
                        <option value="85">85-90%</option>
                        <option value="0">–º–µ–Ω–µ–µ 85%</option>
                    </select>
                </div>
                <div style="margin-bottom: 10px;">
                    <select id="tradeInConditionSelect" style="width: 100%; padding: 5px; border-radius: 5px; border: 1px solid #ccc; box-sizing: border-box;">
                        <option value="excellent">–û—Ç–ª–∏—á–Ω–æ</option>
                        <option value="good">–•–æ—Ä–æ—à–æ</option>
                        <option value="average">–°—Ä–µ–¥–Ω–µ–µ</option>
                        <option value="poor">–ü–ª–æ—Ö–æ–µ</option>
                    </select>
                </div>
                <div style="margin-bottom: 10px;">
                    <label>
                        <input type="checkbox" id="backCoverCheck"> –ó–∞–º–µ–Ω–∞ –∫—Ä—ã—à–∫–∏
                    </label>
                </div>
                <div style="margin-bottom: 10px;">
                    <label>
                        <input type="checkbox" id="screenCheck"> –ó–∞–º–µ–Ω–∞ –¥–∏—Å–ø–ª–µ—è
                    </label>
                </div>
                <div style="margin-bottom: 10px;">
                    <textarea id="tradeInResult" style="width: 100%; height: 100px; resize: none; border-radius: 5px; border: 1px solid #ccc; padding: 5px; box-sizing: border-box;" readonly></textarea>
                </div>
                <div style="display: flex; gap: 5px;">
                    <button id="tradeInCalculateButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #4CAF50; color: white; cursor: pointer;">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</button>
                    <button id="tradeInCloseButton" style="flex: 1; padding: 5px; border-radius: 5px; border: none; background-color: #f44336; color: white; cursor: pointer;">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>

            <!-- –û–∫–Ω–æ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–¥–µ—Ä–∂–∫–∏ -->
            <div id="clearTextAndTimeoutWindow" style="display: none; margin-top: 10px;">
                <label style="display: flex; align-items: center; gap: 10px;">
                    <input type="checkbox" id="clearTextCheckbox"> –û—á–∏—â–∞—Ç—å —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ Enter
                    <span style="flex: 1;">
                        –ó–∞–¥–µ—Ä–∂–∫–∞ (–º—Å): <input type="range" id="timeoutSlider" min="1" max="1000" value="500">
                        <span id="timeoutValue">500</span>
                    </span>
                </label>
            </div>
        `;

        document.body.appendChild(container);

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞
        const header = document.getElementById('priceCheckHeader');
        header.addEventListener('mousedown', startDrag);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        document.getElementById('priceCheckButton').addEventListener('click', checkPrice);
        document.getElementById('hatikoButton').addEventListener('click', checkHatiko);
        document.getElementById('copyButton').addEventListener('click', copyText);
        document.getElementById('whoWorksTodayButton').addEventListener('click', () => fetchWhoWorks('today'));
        document.getElementById('whoWorksTomorrowButton').addEventListener('click', () => fetchWhoWorks('tomorrow'));
        document.getElementById('calculatorButton').addEventListener('click', toggleCalculator);
        document.getElementById('tradeInButton').addEventListener('click', toggleTradeInCalculator);
        document.getElementById('showAllTabsButton').addEventListener('click', showAllTabContents);
        document.getElementById('toggleClearTextAndTimeoutButton').addEventListener('click', () => {
            const clearTextAndTimeoutWindow = document.getElementById('clearTextAndTimeoutWindow');
            clearTextAndTimeoutWindow.style.display = clearTextAndTimeoutWindow.style.display === 'none' ? 'block' : 'none';
        });


        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
document.getElementById('calculatorCalculateButton').addEventListener('click', calculate);
document.getElementById('calculatorReverseButton').addEventListener('click', reverseCalculate);
document.getElementById('calculatorApplyDiscountButton').addEventListener('click', applyDiscount);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–∞–ª–æ—á–∫–∏ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
        document.getElementById('clearTextCheckbox').addEventListener('change', (event) => {
            enabled = event.target.checked;
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª–∑—É–Ω–∫–∞ –∑–∞–¥–µ—Ä–∂–∫–∏
        document.getElementById('timeoutSlider').addEventListener('input', (event) => {
            const timeoutValue = document.getElementById('timeoutValue');
            timeoutValue.textContent = event.target.value;
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        document.getElementById('priceCheckInput').addEventListener('keypress', (event) => {
            if (event.key === 'Enter') checkPrice();
        });

        // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
        document.getElementById('priceCheckCloseButton').addEventListener('click', () => {
            container.style.display = 'none';
        });

        window.priceCheckContainer = container;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –∏ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    window.priceCheckContainer.style.display = 'block';
    document.getElementById('priceCheckInput').focus();
    resetTextareaHeight();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ textarea
function copyText() {
    const resultTextarea = document.getElementById('priceCheckResult');
    resultTextarea.select();
    document.execCommand('copy');
    alert('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
function parseHTML(responseText) {
    const parser = new DOMParser();
    const doc = parser.parseFromString(responseText, "text/html");
    const product = doc.querySelector("a.s-product-header");
    if (product) {
        const title = product.getAttribute("title");
        const relativeLink = product.getAttribute("href");
        const priceElement = doc.querySelector("span.price");
        const price = priceElement ? priceElement.textContent.replace(" ", "") : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
        const link = new URL(relativeLink, baseUrls[0]).href;
        return { title, price, link };
    }
    return { title: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", price: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", link: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω —á–µ—Ä–µ–∑ Hatiko
function checkHatiko() {
    const query = document.getElementById('priceCheckInput').value.trim();
    if (query !== '') {
        const urls = baseUrls.map(url => `${url}/search/?query=${encodeURIComponent(query)}`);
        let results = [];
        let requestsCompleted = 0;

        urls.forEach((url, index) => {
            fetchServerData(
                url,
                function(response) {
                    const data = parseHTML(response.responseText);
                    results[index] = { ...data, link: `${baseUrls[index]}${new URL(data.link).pathname}` };
                    requestsCompleted++;
                    if (requestsCompleted === urls.length) {
                        let messageText = `üß≠ ${results[0].title}\n`;
                        messageText += `ü™ôüÜÇ ${results[0].price}\n`;
                        messageText += `ü™ôüÜÖ ${results[1].price}\n`;
                        messageText += `ü™ôüÖª ${results[2].price}\n`;
                        messageText += `ü™ôüóø ${results[3].price}\n\n`;
                        messageText += `üåêüÜÇ: ${results[0].link}\n`;
                        messageText += `üåêüÜÖ: ${results[1].link}\n`;
                        messageText += `üåêüÖª: ${results[2].link}\n`;
                        messageText += `üåêüóø: ${results[3].link}`;

                        document.getElementById('priceCheckResult').value = messageText;
                        resetTextareaHeight();
                    }
                },
                function(error) {
                    document.getElementById('priceCheckResult').value = error;
                }
            );
        });
    } else {
        document.getElementById('priceCheckResult').value = '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å';
        resetTextareaHeight();
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞
function startDrag(e) {
    isDragging = true;
    const rect = window.priceCheckContainer.getBoundingClientRect();
    offset.x = e.clientX - rect.left;
    offset.y = e.clientY - rect.top;

    document.addEventListener('mousemove', drag);
    document.addEventListener('mouseup', stopDrag);
}

function drag(e) {
    if (isDragging) {
        window.priceCheckContainer.style.right = 'auto';
        window.priceCheckContainer.style.left = `${e.clientX - offset.x}px`;
        window.priceCheckContainer.style.top = `${e.clientY - offset.y}px`;
    }
}

function stopDrag() {
    isDragging = false;
    document.removeEventListener('mousemove', drag);
    document.removeEventListener('mouseup', stopDrag);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
function checkPrice() {
    const query = document.getElementById('priceCheckInput').value.trim();
    if (query !== '') {
        const url = `http://${superserver}/memchat?query=${encodeURIComponent(query)}`;
        fetchServerData(
            url,
            function(response) {
                document.getElementById('priceCheckResult').value = response.responseText;
                resetTextareaHeight();
            },
            function(error) {
                document.getElementById('priceCheckResult').value = error;
            }
        );
    } else {
        document.getElementById('priceCheckResult').value = '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å';
        resetTextareaHeight();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—ã—Å–æ—Ç—ã textarea
function resetTextareaHeight() {
    const textarea = document.getElementById('priceCheckResult');
    if (textarea) {
        textarea.style.height = '120px';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω
function forceUpdate() {
    const url = `http://${superserver}/memchat?force=true`;
    fetchServerData(
        url,
        function(response) {
            alert('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        },
        function(error) {
            alert(error);
        }
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, –∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
function fetchWhoWorks(day) {
    const url = `http://${superserver}/who_work?day=${day}`;
    fetchServerData(
        url,
        function(response) {
            const contentType = response.responseHeaders.match(/content-type:\s*([\w\/\-]+)/i)[1];
            if (contentType.includes('json')) {
                const data = JSON.parse(response.responseText);
                document.getElementById('priceCheckResult').value = data.text.replace(/\n/g, '\n');
            } else {
                document.getElementById('priceCheckResult').value = '–û—à–∏–±–∫–∞: –û—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON';
            }
        },
        function(error) {
            document.getElementById('priceCheckResult').value = error;
        }
    );
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
async function loadRateConfigurations() {
    try {
        const response = await fetch(jsonUrl);
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON: ${response.status}`);
        }
        rateConfigurations = await response.json();
        console.log("–î–∞–Ω–Ω—ã–µ rateConfigurations –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", rateConfigurations);
        saveToLocalStorage(rateConfigurations);
    } catch (error) {
        console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è rateConfigurations:", error);
        const savedData = loadFromLocalStorage();
        if (savedData) {
            rateConfigurations = savedData;
            console.log("–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:", rateConfigurations);
        } else {
            console.error("–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.");
            rateConfigurations = {}; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ rateConfigurations –Ω–µ undefined
        }
    }
}

function saveToLocalStorage(data) {
    localStorage.setItem("rateConfigurations", JSON.stringify(data));
}

function loadFromLocalStorage() {
    const savedData = localStorage.getItem("rateConfigurations");
    return savedData ? JSON.parse(savedData) : null;
}

function calculate() {
    const cashInput = document.getElementById('calculatorCashInput');
    const modeSelect = document.getElementById('calculatorModeSelect');
    const resultField = document.getElementById('calculatorResultField');

    const cash = parseFloat(cashInput.value);
    const mode = modeSelect.value;

    if (isNaN(cash) || cash <= 0) {
        resultField.value = '–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É.';
        return;
    }

    if (mode === 'prepay') {
        const prepayPercentage = 0.05;
        const prepayAmount = Math.ceil(cash * prepayPercentage / 500) * 500;
        resultField.value = `–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 5%: ${prepayAmount} —Ä—É–±–ª–µ–π\n`;
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    if (!rateConfigurations[mode]) {
        resultField.value = '–û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.';
        return;
    }

    const rates = rateConfigurations[mode];
    const qr_price = Math.round(cash * rates.qr / 100) * 100 - 10;
    const card_price = Math.round(cash * rates.card / 100) * 100 - 10;
    const rassrochka_price_six = Math.round(cash * rates.six / 100) * 100 - 10;
    const rassrochka_price_ten = Math.round(cash * rates.ten / 100) * 100 - 10;
    const rassrochka_price_twelve = Math.round(cash * rates.twelve / 100) * 100 - 10;
    const rassrochka_price_eighteen = Math.round(cash * rates.eighteen / 100) * 100 - 10;
    const rassrochka_price_twentyfour = Math.round(cash * rates.twentyfour / 100) * 100 - 10;
    const rassrochka_price_thirtysix = Math.round(cash * rates.thirtysix / 100) * 100 - 10;
    const cashback_amount = Math.round(cash * 0.01);

    resultField.value = `
üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏: ${cash} —Ä—É–±.
üì∑ QR: ${qr_price} —Ä—É–±.
üí≥ –ö–∞—Ä—Ç–æ–π: ${card_price} —Ä—É–±.

üè¶ –†–∞—Å—Å—Ä–æ—á–∫–∞
üîπ 6 –º–µ—Å.: ${rassrochka_price_six} —Ä—É–±. (–æ—Ç ${Math.round(rassrochka_price_six / 6)} —Ä—É–±./–º–µ—Å)
üîπ 10 –º–µ—Å.: ${rassrochka_price_ten} —Ä—É–±. (–æ—Ç ${Math.round(rassrochka_price_ten / 10)} —Ä—É–±./–º–µ—Å)
üîπ 12 –º–µ—Å.: ${rassrochka_price_twelve} —Ä—É–±. (–æ—Ç ${Math.round(rassrochka_price_twelve / 12)} —Ä—É–±./–º–µ—Å)
üîπ 18 –º–µ—Å.: ${rassrochka_price_eighteen} —Ä—É–±. (–æ—Ç ${Math.round(rassrochka_price_eighteen / 18)} —Ä—É–±./–º–µ—Å)
üîπ 24 –º–µ—Å.: ${rassrochka_price_twentyfour} —Ä—É–±. (–æ—Ç ${Math.round(rassrochka_price_twentyfour / 24)} —Ä—É–±./–º–µ—Å)
üîπ 36 –º–µ—Å.: ${rassrochka_price_thirtysix} —Ä—É–±. (–æ—Ç ${Math.round(rassrochka_price_thirtysix / 36)} —Ä—É–±./–º–µ—Å)

üí∏ –ö—ç—à–±—ç–∫: ${cashback_amount} –±–∞–ª–ª–∞–º–∏
`.trim();
}

function reverseCalculate() {
    const cashInput = document.getElementById('calculatorCashInput');
    const modeSelect = document.getElementById('calculatorModeSelect');
    const resultField = document.getElementById('calculatorResultField');

    const reverseAmount = parseFloat(cashInput.value);
    const mode = modeSelect.value;

    if (isNaN(reverseAmount) || reverseAmount <= 0) {
        resultField.value = '–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É.';
        return;
    }

    const rates = rateConfigurations[mode];
    const originalQrPrice = Math.round(reverseAmount / rates.qr);
    const originalCardPrice = Math.round(reverseAmount / rates.card);
    const originalRassrochkaSix = Math.round(reverseAmount / rates.six);
    const originalRassrochkaTen = Math.round(reverseAmount / rates.ten);
    const originalRassrochkaTwelve = Math.round(reverseAmount / rates.twelve || reverseAmount);
    const originalRassrochkaEighteen = Math.round(reverseAmount / rates.eighteen || reverseAmount);
    const originalRassrochkaTwentyFour = Math.round(reverseAmount / rates.twentyfour || reverseAmount);
    const originalRassrochkaThirtySix = Math.round(reverseAmount / rates.thirtysix || reverseAmount);

    resultField.value = `
üîÑ –†–ï–í–ï–†–° —Ä–∞—Å—á–µ—Ç–∞:
üîπ QR: ${originalQrPrice} —Ä—É–±.
üîπ –ö–∞—Ä—Ç–∞: ${originalCardPrice} —Ä—É–±.
üîπ –†–∞—Å—Å—Ä–æ—á–∫–∞ 6 –º–µ—Å: ${originalRassrochkaSix} —Ä—É–±.
üîπ –†–∞—Å—Å—Ä–æ—á–∫–∞ 10 –º–µ—Å: ${originalRassrochkaTen} —Ä—É–±.
üîπ –†–∞—Å—Å—Ä–æ—á–∫–∞ 12 –º–µ—Å: ${originalRassrochkaTwelve} —Ä—É–±.
üîπ –†–∞—Å—Å—Ä–æ—á–∫–∞ 18 –º–µ—Å: ${originalRassrochkaEighteen} —Ä—É–±.
üîπ –†–∞—Å—Å—Ä–æ—á–∫–∞ 24 –º–µ—Å: ${originalRassrochkaTwentyFour} —Ä—É–±.
üîπ –†–∞—Å—Å—Ä–æ—á–∫–∞ 36 –º–µ—Å: ${originalRassrochkaThirtySix} —Ä—É–±.
`.trim();
}

function applyDiscount() {
    const cashInput = document.getElementById('calculatorCashInput');
    const discountInput = document.getElementById('calculatorDiscountInput');
    const resultField = document.getElementById('calculatorResultField');

    const originalPrice = parseFloat(cashInput.value);
    const discount = parseFloat(discountInput.value);

    if (!isNaN(discount)) {
        const discountedPrice = originalPrice - discount;
        const discountPercentage = (discount / originalPrice) * 100;

        resultField.value = `
üéâ –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Å–∫–∏–¥–∫–∞:
üîπ –ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${originalPrice} —Ä—É–±–ª–µ–π
üîπ –°–∫–∏–¥–∫–∞: ${discount} —Ä—É–±–ª–µ–π
üîπ –ü—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏: ${discountPercentage} %
üîπ –°—É–º–º–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π: ${discountedPrice} —Ä—É–±–ª–µ–π
`.trim();
    } else {
        resultField.value = '–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É —Å–∫–∏–¥–∫–∏ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
function toggleCalculator() {
    const calculator = document.getElementById('calculator');
    if (calculator.style.display === 'none') {
        calculator.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
    } else {
        calculator.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ Trade-In
function toggleTradeInCalculator() {
    const tradeInCalculator = document.getElementById('tradeInCalculator');
    if (tradeInCalculator.style.display === 'none') {
        tradeInCalculator.style.display = 'block';
        loadTradeInData(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Trade-In
    } else {
        tradeInCalculator.style.display = 'none';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö Trade-In
function loadTradeInData() {
    const url = `http://${superserver}/load_tn`;
    fetchServerData(
        url,
        function(response) {
            if (response.status === 200) {
                const data = JSON.parse(response.responseText);
                populateTradeInOptions(data);
            } else {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö Trade-In');
            }
        },
        function(error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö Trade-In:', error);
        }
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤ Trade-In
function populateTradeInOptions(data) {
    const modelSelect = document.getElementById('tradeInModelSelect');
    modelSelect.innerHTML = '';
    for (const model in data) {
        const option = document.createElement('option');
        option.value = model;
        option.textContent = model;
        modelSelect.appendChild(option);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–º—è—Ç–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–æ–¥–µ–ª–∏
    modelSelect.addEventListener('change', () => {
        const memorySelect = document.getElementById('tradeInMemorySelect');
        memorySelect.innerHTML = '';
        const selectedModel = modelSelect.value;
        if (data[selectedModel]) {
            data[selectedModel].forEach(item => {
                const option = document.createElement('option');
                option.value = item.memory;
                option.textContent = `${item.memory} GB`;
                memorySelect.appendChild(option);
            });
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å—á–µ—Ç–∞
    document.getElementById('tradeInCalculateButton').addEventListener('click', () => {
        calculateTradeIn(data);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Trade-In
function calculateTradeIn(data) {
    const model = document.getElementById('tradeInModelSelect').value;
    const memory = document.getElementById('tradeInMemorySelect').value;
    const battery = document.getElementById('tradeInBatterySelect').value;
    const condition = document.getElementById('tradeInConditionSelect').value;
    const backCover = document.getElementById('backCoverCheck').checked; // –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å –¥–ª—è –∫—Ä—ã—à–∫–∏
    const screen = document.getElementById('screenCheck').checked; // –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å –¥–ª—è –¥–∏—Å–ø–ª–µ—è

    const modelData = data[model].find(item => item.memory === memory);
    if (!modelData) {
        document.getElementById('tradeInResult').value = '–û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.';
        return;
    }

    let price = parseInt(modelData.ideal_price, 10);

    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Ü–µ–Ω—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞—Ç–∞—Ä–µ–∏
    if (battery === '0') {
        price += parseInt(modelData.battery_replacement, 10);
    } else if (battery === '85') {
        price += parseInt(modelData.battery_wear, 10);
    }

    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Ü–µ–Ω—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    if (condition === 'average') {
        price -= price < 20000 ? 2000 : 1000;
    } else if (condition === 'poor') {
        price -= price < 20000 ? 3000 : 2000;
    }

    // –£—á–µ—Ç –∑–∞–º–µ–Ω—ã –∫—Ä—ã—à–∫–∏
    if (backCover) {
        price += parseInt(modelData.back_cover_replacement, 10);
    }

    // –£—á–µ—Ç –∑–∞–º–µ–Ω—ã –¥–∏—Å–ø–ª–µ—è
    if (screen) {
        price += parseInt(modelData.screen_replacement, 10);
    }

    // –°—Ç–∞—Ç—É—Å –∫—Ä—ã—à–∫–∏ –∏ –¥–∏—Å–ø–ª–µ—è
    const backCoverStatus = backCover ? 'üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞ –∫—Ä—ã—à–∫–∏' : '‚úÖ –ö—Ä—ã—à–∫–∞ –≤ –ø–æ—Ä—è–¥–∫–µ';
    const screenStatus = screen ? 'üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞ –¥–∏—Å–ø–ª–µ—è' : '‚úÖ –î–∏—Å–ø–ª–µ–π –≤ –ø–æ—Ä—è–¥–∫–µ';

    const conditionEmoji = condition === 'excellent' ? 'üòé' :
                          condition === 'good' ? 'üòÄ' :
                          condition === 'average' ? 'üòê' : 'üò¢';

    const result = `
üì± –ú–æ–¥–µ–ª—å: ${model} (${memory} GB)
üîã –ë–∞—Ç–∞—Ä–µ—è: ${battery === '90' ? '90%+' : battery === '85' ? '85-90%' : '–º–µ–Ω–µ–µ 85%'}
üì¶ –°–æ—Å—Ç–æ—è–Ω–∏–µ: ${condition === 'excellent' ? '–û—Ç–ª–∏—á–Ω–æ' : condition === 'good' ? '–•–æ—Ä–æ—à–æ' : condition === 'average' ? '–°—Ä–µ–¥–Ω–µ–µ' : '–ü–ª–æ—Ö–æ'}
${backCoverStatus}
${screenStatus}
${conditionEmoji} –°–æ—Å—Ç–æ—è–Ω–∏–µ: ${condition === 'excellent' ? '–û—Ç–ª–∏—á–Ω–æ–µ' : condition === 'good' ? '–•–æ—Ä–æ—à–µ–µ' : condition === 'average' ? '–°—Ä–µ–¥–Ω–µ–µ' : '–ü–ª–æ—Ö–æ–µ'}

üí∞ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${price} —Ä—É–±–ª–µ–π

üëâ –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
    `;

    document.getElementById('tradeInResult').value = result;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è Enter
function clearText(event) {
    if (event.key === "Enter" && enabled) {
        const timeoutValue = parseInt(document.getElementById('timeoutSlider').value, 10);
        setTimeout(() => {
            event.target.value = ""; // –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
        }, timeoutValue);  // –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ (–≤–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ)
function toggleScript() {
    enabled = !enabled;
    updateMenu();
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
function updateMenu() {
    if (commandId) {
        GM_unregisterMenuCommand(commandId);
    }
    const menuText = enabled ? "–û—Ç–∫–ª—é—á–∏—Ç—å –æ—á–∏—Å—Ç–∫—É —Ç–µ–∫—Å—Ç–∞ –ø–æ Enter" : "–í–∫–ª—é—á–∏—Ç—å –æ—á–∏—Å—Ç–∫—É —Ç–µ–∫—Å—Ç–∞ –ø–æ Enter";
    commandId = GM_registerMenuCommand(menuText, toggleScript);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('keyup', clearText, true);
updateMenu();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
function initialize() {
    registerMenuCommands();
    console.log('Initialization complete');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    loadRateConfigurations(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤
    setInterval(loadRateConfigurations, UPDATE_INTERVAL);
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
function registerMenuCommands() {
    GM_registerMenuCommand('–†–∞—Å–∫—Ä—ã—Ç—å –≤—Å—é –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞', showAllTabContents, 'S');
    GM_registerMenuCommand('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω', createPriceCheckWindow);
    GM_registerMenuCommand('–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω—ã', forceUpdate);
    GM_registerMenuCommand('–ü–æ–∫–∞–∑–∞—Ç—å –∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ–≥–æ–¥–Ω—è', () => fetchWhoWorks('today'));
    GM_registerMenuCommand('–ü–æ–∫–∞–∑–∞—Ç—å –∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞–≤—Ç—Ä–∞', () => fetchWhoWorks('tomorrow'));
    GM_registerMenuCommand('–û—Ü–µ–Ω–∫–∞ Trade-In', toggleTradeInCalculator);
}

window.addEventListener('load', () => {
    console.log('Main userscript loaded');
    initialize();
});
